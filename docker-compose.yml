services:
  pygeoapi:
    build: .
    container_name: reference-geoconnex-us
    ports:
      - 5000:80
    volumes:
      - ./pygeoapi.config.yml:/pygeoapi/local.config.yml
    env_file:
      - .env

  database:
    container_name: database
    image: postgis/postgis:14-3.2-alpine
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data

  hydrodump:
    container_name: hydrodump
    image: ghcr.io/cgs-earth/hydrodump-action:latest
    command: ["hydrodump", "run"]
    env_file:
      - .env

  local:
  # Instead of using a remote hydrodump, you can source a local database dump, reference.sql.gz
    container_name: local
    image: postgis/postgis:14-3.2-alpine
    depends_on:
      - database
    volumes:
      - ./reference.sql.gz:/docker-entrypoint-initdb.d/reference.sql.gz
    entrypoint: >
      sh -c "
      export PGPASSWORD=${POSTGRES_PASSWORD} && \
      echo 'Waiting for database to be ready...' && \
      while ! pg_isready -h ${POSTGRES_HOST} -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do
        sleep 1
      done && \
      echo 'Database is ready. Starting migration...' && \
      gunzip -c /docker-entrypoint-initdb.d/reference.sql.gz | psql -h ${POSTGRES_HOST} -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      "
    env_file:
      - .env

volumes:
  db_data:
